Plugins installed :-
====================
meteor add mizzao:bootstrap-3
meteor add underscore
meteor add iron:router
meteor add sacha:spin //Spin package to create loading template
meteor add ian:accounts-ui-bootstrap-3  //Accounts with bootstrap styling
meteor add accounts-password




Plugins removed :-
==================
//Remove autopublish and add publish/subscribe manually
meteor remove autopublish


Other helpful notes/commands
==============================
1. meteor create :- Creates a barebone project with .meteor and html,css and js files
2. meteor :- run the meteor app
3. meteor reset :- Clear database when its in an inconsistent state
4. meteor mongo :- Mongo shell with the app's current database preloaded into the 'db' variable
5. meteor deploy <appname>.meteor.com :- Deploy the current app at http://<appname>.meteor.
6. {{> yield}} : Yield a template . This is iron router template helper 
7. Router.configure({
	layoutTemplate : 'layout',    //This is the basic layout. This remains the same and route templates replace
	                              //the {{> yield}}
	loadingTemplate : 'loading', //This is the place where you specify the loading template. Iron router
								 //displays this template when you wait on some data
	waitOn : function(){         //Function that specifies the data for which the iron router has to wait for
		return Meteor.subscribe('posts');
	}
	notFoundTemplate : 'notFound' //Route not Found common template
});
The posts data will be fetched once when the user accesses the app for the first time. After that it is available readily
8. All user related data should be stored inside the Session or inside the url (common data for users).
Whenever session data is changed, you can make is reactive by using Tracker.autorun which runs the reactive code automatically whenever there is a change in the data. Moreover this works like Hot Code Reload so users will never be disrupted as session and data will not be lost. Wrap the code that has to be reactive inside a Tracker.autorun function.
